{"version":3,"sources":["asteroid.png","config/fire.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","API_KEY","useState","asteroids","setAsteroids","asteroidsRange","setAsteroidsRange","startDate","setStartDate","endDate","setEndDate","asteroidID","setasteroidID","listofAster","setlistofAster","handleOnChange","e","target","id","value","console","log","mapDataToAsteroids","data","mapped","forEach","element","push","name","magnitude","absolute_magnitude_h","mapDataToAsteroidsRange","mappedRange","key","asterRange","date","mapDataToAsteroidsID","useEffect","apiURL","apiURLRange1","apiURLRange2","fetchData","a","axios","get","response","near_earth_objects","fetchDataRange","preventDefault","apiURLsearchID","fetchDataID","className","style","backgroundImage","asteroid","color","onClick","map","aster","width","onSubmit","for","type","onChange","class","leftmargin","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1a08580.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/asteroid.088fe5a9.png\";","import firebase from 'firebase' ;\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCgqu_JvqfXUhrct7yLQDpnxxJv5VnBeYU\",\r\n    authDomain: \"ringed-subject-273722.firebaseapp.com\",\r\n    databaseURL: \"https://ringed-subject-273722.firebaseio.com\",\r\n    projectId: \"ringed-subject-273722\",\r\n    storageBucket: \"ringed-subject-273722.appspot.com\",\r\n    messagingSenderId: \"618606982099\",\r\n    appId: \"1:618606982099:web:d7cb082213acac9f753526\",\r\n    measurementId: \"G-22FWH8X4V3\"\r\n  };\r\n  const fire=firebase.initializeApp(firebaseConfig);\r\n  export default fire;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport asteroid from './asteroid.png'\r\nimport fire from './config/fire' ;\r\nimport './App.css';\r\n// import bgImage from './asteroid.jpg'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n\r\n  const API_KEY = 'Q6Qo8BlhbsRxnL4pG0cwTRZ91mtfK5iiHBKo8vLi'\r\n  const [asteroids, setAsteroids] = useState([]);\r\n  const [asteroidsRange, setAsteroidsRange] = useState([])\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [asteroidID, setasteroidID] = useState('')\r\n  const [listofAster, setlistofAster] = useState([])\r\n  \r\n  let tempp\r\n  // let mappedData = []\r\n  //https://api.nasa.gov/neo/rest/v1/neo/browse?page=0&size=20&api_key=Q6Qo8BlhbsRxnL4pG0cwTRZ91mtfK5iiHBKo8vLi\r\n  //`https://api.nasa.gov/neo/rest/v1/neo/browse?page=0&size=20&api_key=${API_KEY}`\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [asteroids, asteroidsRange, listofAster])\r\n\r\n\r\n  function handleOnChange(e) {\r\n\r\n      if(e.target.id === 'start'){\r\n          setStartDate(e.target.value)\r\n          console.log(startDate)\r\n      }\r\n      else if(e.target.id === 'end'){\r\n          setEndDate(e.target.value)\r\n      }\r\n      else{\r\n          setasteroidID(e.target.value)\r\n      }\r\n  }\r\n\r\n  function mapDataToAsteroids(data){\r\n    const mapped = [];\r\n    data.forEach(element => {\r\n        mapped.push({ \r\n            id: element.id,\r\n            name: element.name,\r\n            magnitude: element.absolute_magnitude_h\r\n        })\r\n    });\r\n    return mapped\r\n  }\r\n  function mapDataToAsteroidsRange(data){\r\n      // data = JSON.parse(data);\r\n      console.log(data)\r\n      const mappedRange = [];\r\n      for( var key in data){\r\n        console.log(typeof(key))\r\n          data[key].forEach(asterRange => {\r\n             mappedRange.push({\r\n               date: key,\r\n               id: asterRange.id,\r\n               name: asterRange.name,\r\n               magnitude: asterRange.absolute_magnitude_h\r\n           })\r\n        })\r\n      }\r\n    return mappedRange\r\n  }\r\n\r\n  function mapDataToAsteroidsID(data){\r\n    const mappedRange = []\r\n\r\n    mappedRange.push({\r\n      id: data.id,\r\n      name: data.name,\r\n      magnitude: data.absolute_magnitude_h\r\n    })\r\n    console.log(mappedRange)\r\n\r\n    return mappedRange;\r\n\r\n  }\r\n  const apiURL = `https://api.nasa.gov/neo/rest/v1/neo/browse?page=0&size=20&api_key=${API_KEY}`;\r\n  const apiURLRange1 = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${startDate}&detailed=true&api_key=${API_KEY}`;\r\n  const apiURLRange2 = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&detailed=true&api_key=${API_KEY}`;\r\n\r\n  const fetchData = async () => {\r\n        const response = await axios.get(apiURL)\r\n        await setAsteroids(mapDataToAsteroids(response.data.near_earth_objects))\r\n        console.log(asteroids[0])\r\n  }\r\n\r\n  const fetchDataRange = async (e) => {\r\n        e.preventDefault()\r\n        let response = {}\r\n        if(endDate === ''){\r\n            response = await axios.get(apiURLRange1)  \r\n        }\r\n        else{\r\n            response = await axios.get(apiURLRange2)\r\n        }\r\n        // console.log(response.data.near_earth_objects)\r\n        // console.log(typeof(response.data.near_earth_objects));\r\n        await setAsteroidsRange(mapDataToAsteroidsRange(response.data.near_earth_objects))\r\n        console.log(asteroidsRange[0])\r\n    }\r\n\r\n    const apiURLsearchID= `https://api.nasa.gov/neo/rest/v1/neo/${asteroidID}?api_key=${API_KEY}`\r\n    // const apiURLsearchID = 'https://api.nasa.gov/neo/rest/v1/neo/2021277?api_key=Q6Qo8BlhbsRxnL4pG0cwTRZ91mtfK5iiHBKo8vLi'\r\n\r\n    const fetchDataID = async (e) => {\r\n        e.preventDefault()\r\n        let response = {}\r\n        response = await axios.get(apiURLsearchID)\r\n\r\n        await setlistofAster(mapDataToAsteroidsID(response.data))\r\n        // tempp = await  mapDataToAsteroidsID(response.data)\r\n        // console.log(tempp[0].name)\r\n        console.log(listofAster[0])\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"App\" style={{ backgroundImage:`url(${asteroid})` }}>\r\n        {/* <img className = 'bg' style={{height:'100%', width:'100%', position: 'absolute'}} src={ bgImage }/> */}\r\n        <div className=\"container list-of-asteroids\">\r\n          <div className=\"row justify-content offset-4\">\r\n              {/* <div className=\"offset-4\"></div> */}\r\n              <h3 style={{ color: 'white' }}>Welcome to explore Asteroids</h3>\r\n          </div>\r\n          <div className=\"row mt-3 mb-5\">\r\n            <button className=\"offset-5 btn btn-info\" onClick={fetchData}>\r\n              Fetch Data - List of Asteroids\r\n            </button>\r\n          </div>\r\n          <div className=\"row\">\r\n              <hr/>\r\n                {asteroids &&\r\n                  asteroids.map(aster => {\r\n                    return (\r\n                      <div className=\"col-md-4\">\r\n                          <div className=\"card mb-5\" style={{width: '18rem'}}>\r\n                            <div className =\"card-header\">\r\n                              Featured\r\n                            </div>\r\n                            <ul className =\"list-group list-group-flush\">\r\n                              <li className =\"list-group-item\">Asteroid ID : {aster.id}</li>\r\n                              <li className =\"list-group-item\">Asteroid Name : {aster.name}</li>\r\n                              <li className =\"list-group-item\">Asteroid magnitude : {aster.magnitude}</li>\r\n                            </ul>\r\n                            <hr/>\r\n                          </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n          </div>\r\n        </div>\r\n        <div className=\"container list-using-range\">\r\n              <div className=\"row mt-5 justify-content-center offset-1\">\r\n              <h2 style={{ color: 'white' }} className = 'note mb-5'>Find Asteroids within Date Range(Max Range:7 days)</h2>\r\n                  \r\n                  <form onSubmit={fetchDataRange}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5\">\r\n                        <div className=\"form-group\">        \r\n                              <label style={{ color: 'white' }} className = 'range' for=\"start\"> Start date:</label>\r\n                              <hr/>\r\n                              <input type=\"date\" id=\"start\" name=\"range-start\" value = {startDate} onChange = {handleOnChange}></input>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-5\">\r\n                        <div className=\"form-group\">        \r\n                              <label style={{ color: 'white' }} className = 'range' for=\"end\"> End date:</label>\r\n                              <hr/>\r\n                              <input type=\"date\" id=\"end\" value = {endDate} name=\"range-end\" onChange = {handleOnChange}></input>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-2\">\r\n                              <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n              </div>\r\n              <div className=\"row mt-2 centre\">\r\n              \r\n                <hr/>\r\n                {asteroidsRange &&\r\n                  asteroidsRange.map(aster => {\r\n                    return (\r\n                      <div className=\"col-md-2 centre \">\r\n                          <div className=\"card mb-2\" style={{width: '18rem',leftmargin: '20px'}}>\r\n                            <div style={{ marginLeft: '5px' }} className =\"card-header\">\r\n                              {aster.date}\r\n                            </div>\r\n                            <ul className =\"col-md-2 centre\">\r\n                              <li className =\"list-group-item\">Asteroid ID : {aster.id}</li>\r\n                              <li className =\"list-group-item\">Asteroid Name : {aster.name}</li>\r\n                              <li className =\"list-group-item\">Asteroid magnitude : {aster.magnitude}</li>\r\n                            </ul>\r\n                            <hr/>\r\n                          </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </div>\r\n              \r\n        </div>\r\n        <div className=\"container list-using-id offset-1\">\r\n              <div className=\"row justify-content-center\">\r\n                  <div className=\"col-md-5\">\r\n                    <form onSubmit = {fetchDataID}>\r\n                        <div className=\"form-group\">        \r\n                            <label className = 'listID' for=\"ID\"> <h2 style={{ color: 'white' }}>Search by ID </h2></label>\r\n                            <hr/>\r\n                            <input type=\"text\" id=\"asteroidID\" name=\"asteroidID\" value = {asteroidID} onChange = {handleOnChange}></input>\r\n                            <button type=\"submit\" class=\"btn btn-info\">Find</button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n              </div> \r\n\r\n              <div className=\"row mt-5 justify-content-center offset-1\">\r\n                  \r\n                <hr />\r\n                \r\n                 {listofAster &&\r\n                  listofAster.map(aster => {\r\n                    return (\r\n                      <div className=\"col-md-4 \">\r\n                          <div className=\"card mb-2 \" style={{width: '15rem'}}>\r\n                            <div className =\"card-header\">\r\n                              {aster.date}\r\n                            </div>\r\n                            <ul className =\"list-group list-group-flush \" >\r\n                              <li className =\"list-group-item\">Asteroid ID : {aster.id}</li>\r\n                              <li className =\"list-group-item\">Asteroid Name : {aster.name}</li>\r\n                              <li className =\"list-group-item\">Asteroid magnitude : {aster.magnitude}</li>\r\n                            </ul>\r\n                            <hr/>\r\n                          </div>\r\n                      </div>\r\n                    );\r\n                 })}\r\n            </div>     \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}